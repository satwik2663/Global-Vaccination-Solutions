

package userinterface.AdministrativeRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.OrphanageEnterprise;
import Business.Enterprise.VaccinationEnterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorByHosWorkRequest;
import Business.WorkQueue.DoctorByOrgWorkRequest;
import Business.WorkQueue.EventsByHosForOrphaWorkRequest;
import Business.WorkQueue.VaccineWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  raunak
 */
public class RequestEventForOrphaByHosJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Network network;
    private UserAccount userAccount;
    /** Creates new form AdminWorkAreaJPanel */
    public RequestEventForOrphaByHosJPanel(JPanel userProcessContainer, Enterprise enterprise, Network network,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.network=network;
        this.userAccount = userAccount;
        
        EventDate2Field.setVisible(false);
        EventDate3Field.setVisible(false);
        plus2Btn.setVisible(false);
        eventDate2JLabel.setVisible(false);
        eventDate3JLabel.setVisible(false);
        
                //EventNameTextField.setEnabled(true);
        populateRequestTable();
        populateOrphanageComboBox();
        
        //valueLabel.setText(enterprise.getName());
    }
    
    private void populateOrphanageComboBox() {
        orphanageComboBox.removeAllItems();
      
orphanageComboBox.addItem("Select");
        for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
            if(ent.getEnterpriseType().getValue().equalsIgnoreCase("Orphanage"))
            
            orphanageComboBox.addItem(ent);
        }

    }
    public void populateRequestTable(){
        //System.out.println("Testing123");
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[11];
            if(request instanceof EventsByHosForOrphaWorkRequest ){
            row[0] = ((EventsByHosForOrphaWorkRequest)request);
            row[1] = ((EventsByHosForOrphaWorkRequest)request).geteventName();
            row[2] = ((EventsByHosForOrphaWorkRequest)request).getPurpose();
            row[3] = ((EventsByHosForOrphaWorkRequest)request).getHospitalVisiting();
            row[4] = ((EventsByHosForOrphaWorkRequest)request).getOrphanageName();
            row[5] = ((EventsByHosForOrphaWorkRequest)request).getVisitingDate1();
            row[6] = ((EventsByHosForOrphaWorkRequest)request).getVisitingDate2();
            row[7] = ((EventsByHosForOrphaWorkRequest)request).getVisitingDate3();
            row[8] = ((EventsByHosForOrphaWorkRequest)request).getStatus();
            row[9] = ((EventsByHosForOrphaWorkRequest)request).getSelectedDate();
            row[10] = ((EventsByHosForOrphaWorkRequest)request).getResolveDate();
            
           /* String result = ((StaffWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            */
            model.addRow(row);
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        SubmitButton = new javax.swing.JButton();
        eventDate1JLabel = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        EventDate1Field = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        EventNameTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        EventPurposeTextField = new javax.swing.JTextField();
        EventDate2Field = new com.toedter.calendar.JDateChooser();
        eventDate2JLabel = new javax.swing.JLabel();
        EventDate3Field = new com.toedter.calendar.JDateChooser();
        eventDate3JLabel = new javax.swing.JLabel();
        plus1Btn = new javax.swing.JButton();
        plus2Btn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        orphanageComboBox = new javax.swing.JComboBox();
        enterpriseLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        workRequestJTable.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Event id", "Event Name", "Purpose", "Participating Hospital", "Orphanage Name", "Event Date 1", "Event Date 2", "Event Date 3", "Status", "Date Selected", "Confirmed On"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 1130, 110));

        SubmitButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        SubmitButton.setText("Sumbit Request");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });
        add(SubmitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 520, -1, -1));

        eventDate1JLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        eventDate1JLabel.setText("Event Date 1 *: ");
        add(eventDate1JLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, -1, -1));

        backBtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 520, -1, -1));

        EventDate1Field.setMinSelectableDate(new Date());
        add(EventDate1Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 160, 30));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setText("Event Name *: ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        EventNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventNameTextFieldActionPerformed(evt);
            }
        });
        add(EventNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 530, 30));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setText("Purpose of Event *: ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        EventPurposeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventPurposeTextFieldActionPerformed(evt);
            }
        });
        add(EventPurposeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 530, 30));

        EventDate2Field.setMinSelectableDate(new Date());
        add(EventDate2Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, 160, 30));

        eventDate2JLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        eventDate2JLabel.setText("Event Date 2 : ");
        add(eventDate2JLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, -1, -1));

        EventDate3Field.setMinSelectableDate(new Date());
        add(EventDate3Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 450, 160, 30));

        eventDate3JLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        eventDate3JLabel.setText("Event Date 3: ");
        add(eventDate3JLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, -1, -1));

        plus1Btn.setText("[+]");
        plus1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plus1BtnActionPerformed(evt);
            }
        });
        add(plus1Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, -1, -1));

        plus2Btn.setText("[+]");
        plus2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plus2BtnActionPerformed(evt);
            }
        });
        add(plus2Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 410, -1, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel6.setText("Orphanage* : ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, -1, -1));

        orphanageComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(orphanageComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 160, 30));

        enterpriseLabel1.setFont(new java.awt.Font("Broadway", 1, 24)); // NOI18N
        enterpriseLabel1.setText("Schedule Events for Orphanages");
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 610, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
       
        //String eventName = 
        //Date reqDate = EventDate1Field.getDate();
       // String mess = CommentsTextField.getText();
        if(EventNameTextField.getText().equals("") || EventPurposeTextField.getText().equals("") ||
        orphanageComboBox.getSelectedItem().toString().equalsIgnoreCase("Select") || EventDate1Field.getDate()==null){
          
            JOptionPane.showMessageDialog(null, "Required fields cannot be empty");
                    
        }
        else{
        EventsByHosForOrphaWorkRequest request = new EventsByHosForOrphaWorkRequest();
        
       request.seteventName(EventNameTextField.getText());
       request.setPurpose(EventPurposeTextField.getText());
        request.setOrphanageName(orphanageComboBox.getSelectedItem().toString());
        request.setVisitingDate1(EventDate1Field.getDate());
        request.setVisitingDate2(EventDate2Field.getDate());
        request.setVisitingDate3(EventDate3Field.getDate());
        request.setHospitalVisiting(enterprise.toString());
        request.setStatus("Requested");
        request.setSender(userAccount);
        //request.setMessage(mess);
        
        Enterprise ent = null;
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            if (enterprise instanceof HospitalEnterprise){
                ent = enterprise;
                break;
            }
        }
        if (ent!=null){
            ent.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            //System.out.println();
        }
        //System.out.println("Testing");
        populateRequestTable();
        
        
        //System.out.println(userAccount.getWorkQueue().getWorkRequestList().get(0).toString());
        //System.out.println(userAccount.getWorkQueue().getWorkRequestList().get(1).toString());
                                           
        }
       EventNameTextField.setText("");
       EventPurposeTextField.setText("");
      
       EventDate1Field.setDate(null);
       EventDate2Field.setDate(null);
       EventDate3Field.setDate(null);
       EventDate2Field.setVisible(false);
       EventDate3Field.setVisible(false);
       plus2Btn.setVisible(false);
        eventDate2JLabel.setVisible(false);
        eventDate3JLabel.setVisible(false);
     
        
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
       userProcessContainer.remove(this);
       CardLayout layout = (CardLayout) userProcessContainer.getLayout();
       layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void EventNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EventNameTextFieldActionPerformed

    private void EventPurposeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventPurposeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EventPurposeTextFieldActionPerformed

    private void plus1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plus1BtnActionPerformed
        // TODO add your handling code here:
        
        EventDate2Field.setVisible(true);
        plus2Btn.setVisible(true);
        eventDate2JLabel.setVisible(true);
    }//GEN-LAST:event_plus1BtnActionPerformed

    private void plus2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plus2BtnActionPerformed
        // TODO add your handling code here:
        
        EventDate3Field.setVisible(true);
        eventDate3JLabel.setVisible(true);
    }//GEN-LAST:event_plus2BtnActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser EventDate1Field;
    private com.toedter.calendar.JDateChooser EventDate2Field;
    private com.toedter.calendar.JDateChooser EventDate3Field;
    private javax.swing.JTextField EventNameTextField;
    private javax.swing.JTextField EventPurposeTextField;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel eventDate1JLabel;
    private javax.swing.JLabel eventDate2JLabel;
    private javax.swing.JLabel eventDate3JLabel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox orphanageComboBox;
    private javax.swing.JButton plus1Btn;
    private javax.swing.JButton plus2Btn;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
    
}
