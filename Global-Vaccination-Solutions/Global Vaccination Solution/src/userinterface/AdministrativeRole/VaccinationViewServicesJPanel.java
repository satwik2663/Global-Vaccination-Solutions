package userinterface.AdministrativeRole;

import Business.ConfigureASystem;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.VaccinationEnterprise;
import Business.Network.Network;
import Business.Organization.DeliveryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DeliveryWorkRequest;
import Business.WorkQueue.VaccineWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class VaccinationViewServicesJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Network network;
    private UserAccount userAccount;
    private EcoSystem ecosystem;

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    public VaccinationViewServicesJPanel(JPanel userProcessContainer, Enterprise enterprise, Network network, UserAccount userAccount, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.network = network;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;

        if (enterprise.getOrganizationDirectory().getOrganizationList().isEmpty()) {
            requestDelBtn.setEnabled(false);
        }
        //ecosystem = ConfigureASystem.configure();
        populateRequestTable();
        //valueLabel.setText(enterprise.getName());
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (Network net : ecosystem.getNetworkList()) {

            for (Enterprise ent : net.getEnterpriseDirectory().getEnterpriseList()) {
                for (WorkRequest request : ent.getWorkQueue().getWorkRequestList()) {
                    if (request instanceof VaccineWorkRequest) {
                        Object[] row = new Object[8];
                        row[0] = ((VaccineWorkRequest) request);
                        row[1] = ((VaccineWorkRequest) request).getvaccineQuantity();
                        row[2] = ((VaccineWorkRequest) request).getSender();
                        row[3] = ((VaccineWorkRequest) request).getReceiver();
                        row[4] = ((VaccineWorkRequest) request).getRequestDate();
                        row[5] = ((VaccineWorkRequest) request).getResolveDate();
                        row[6] = net;
                        row[7] = ((VaccineWorkRequest) request).getStatus();

                        /* String result = ((StaffWorkRequest) request).getTestResult();
                         row[3] = result == null ? "Waiting" : result;
                         */
                        model.addRow(row);

                    }
                }
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        AcceptJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        requestDelBtn = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        workRequestJTable.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Vaccine Name", "Quantity Requested", "Sender", "Receiver", "Requested Date", "Accepted Date", "Country", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workRequestJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 960, 190));

        AcceptJButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        AcceptJButton.setText("Accept Request");
        AcceptJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptJButtonActionPerformed(evt);
            }
        });
        add(AcceptJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, -1, -1));

        refreshJButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        refreshJButton.setText("Refresh Table");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, -1, -1));

        backBtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, -1, -1));

        requestDelBtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        requestDelBtn.setText("Request Delivery");
        requestDelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestDelBtnActionPerformed(evt);
            }
        });
        add(requestDelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 340, -1, -1));

        enterpriseLabel1.setFont(new java.awt.Font("Broadway", 1, 24)); // NOI18N
        enterpriseLabel1.setText("VACCINATION REQUESTS");
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 490, 70));
    }// </editor-fold>//GEN-END:initComponents

    private void AcceptJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        System.out.println(workRequestJTable.getValueAt(selectedRow, 0));

        VaccineWorkRequest request = (VaccineWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if (request.getStatus().equalsIgnoreCase("Accepted")) {

            JOptionPane.showMessageDialog(null, "Request already acknowledged");
        } else {
            request.setReceiver(userAccount);
            request.setResolveDate(new Date());
            request.setStatus("Accepted");
            populateRequestTable();
        }

    }//GEN-LAST:event_AcceptJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateRequestTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void requestDelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestDelBtnActionPerformed

        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        VaccineWorkRequest vaccineWorkRequest = (VaccineWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if (vaccineWorkRequest.getStatus().equalsIgnoreCase("Delivery Requested") || vaccineWorkRequest.getStatus().equalsIgnoreCase("Requested")) {

            JOptionPane.showMessageDialog(null, "Can't request delivery");
        } else {
            if (vaccineWorkRequest.getReceiver().getUsername().equalsIgnoreCase(userAccount.getUsername())) {

                DeliveryWorkRequest deliveryWorkRequest = new DeliveryWorkRequest();
                String networkType;

                System.out.println(workRequestJTable.getValueAt(selectedRow, 5).toString());

                if (network.getName() == workRequestJTable.getValueAt(selectedRow, 6)) {
                    networkType = "IN";
                } else {
                    networkType = "OUT";
                }

                deliveryWorkRequest.setVaccineName(workRequestJTable.getValueAt(selectedRow, 0).toString());
                deliveryWorkRequest.setVaccineQuantity(Integer.parseInt(workRequestJTable.getValueAt(selectedRow, 1).toString()));
                deliveryWorkRequest.setDestinationNetwork(networkType);
                //deliveryWorkRequest.setSender(userAccount);
                deliveryWorkRequest.setSender((UserAccount)workRequestJTable.getValueAt(selectedRow, 2));
                deliveryWorkRequest.setReceiver(null);
                deliveryWorkRequest.setRequestDate(new Date());
                deliveryWorkRequest.setResolveDate(null);
                deliveryWorkRequest.setStatus("Delivery Requested");
                vaccineWorkRequest.setStatus("Delivery Requested");

                Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof DeliveryOrganization) {
                        org = organization;
                        break;
                    }
                }
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(deliveryWorkRequest);
                    userAccount.getWorkQueue().getWorkRequestList().add(deliveryWorkRequest);
                    JOptionPane.showMessageDialog(null, "Delivery has been requested");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Vaccine request is accepted by another enterprise so you can not request delivery for it");
            }
        }

        populateRequestTable();
    }//GEN-LAST:event_requestDelBtnActionPerformed

    private void workRequestJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workRequestJTableMouseClicked

    }//GEN-LAST:event_workRequestJTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptJButton;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton requestDelBtn;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables

}
