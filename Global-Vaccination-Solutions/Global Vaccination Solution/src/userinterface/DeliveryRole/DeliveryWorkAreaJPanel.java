/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryRole;

import Business.EcoSystem;
import Business.Organization.DeliveryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DeliveryWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harry
 */
public class DeliveryWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private DeliveryOrganization deliveryOrganization;
    private String vacName;
    
    
Random r = new Random();
int low = 1111;
int high = 3333333;
int result = r.nextInt(high-low) + low;

    public DeliveryWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.deliveryOrganization = (DeliveryOrganization) organization;

        populateTable();

        valueLabel.setText(userAccount.toString());
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : deliveryOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = ((DeliveryWorkRequest) request).getSender();
            row[1] = ((DeliveryWorkRequest) request).getReceiver() == null ? null : ((DeliveryWorkRequest) request).getReceiver().getEmployee().getName();
            row[2] = ((DeliveryWorkRequest) request).getRequestDate();
            row[3] = ((DeliveryWorkRequest) request).getResolveDate();
            row[4] = ((DeliveryWorkRequest) request).getStatus();
            row[5] = ((DeliveryWorkRequest) request);
            row[6] = ((DeliveryWorkRequest) request).getVaccineQuantity();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        acknowledgeBtn = new javax.swing.JButton();
        deliveryLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        datePickerLabel = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        enterpriseLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sender", "Receiver", "Requested Date", "Accepted Date", "Status", "Vaccine", "Vaccine Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        acknowledgeBtn.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        acknowledgeBtn.setText("Send Acknowledgment");
        acknowledgeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acknowledgeBtnActionPerformed(evt);
            }
        });

        deliveryLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deliveryLabel.setText("DELIVERY : ");

        valueLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        valueLabel.setText("<value>");

        datePickerLabel.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        datePickerLabel.setText("Estimated date of delivery* :");

        jDateChooser.setMinSelectableDate(new Date());

        enterpriseLabel1.setFont(new java.awt.Font("Broadway", 1, 24)); // NOI18N
        enterpriseLabel1.setText("DELIEVERY SERVICES WORK AREA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(deliveryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(datePickerLabel)
                                .addGap(32, 32, 32)
                                .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(acknowledgeBtn)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deliveryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datePickerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(acknowledgeBtn)
                .addContainerGap(344, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1033, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acknowledgeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acknowledgeBtnActionPerformed

        if (jDateChooser.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Please select estimated date to acknowledge");
        } else {
            int selectedRow = workRequestJTable.getSelectedRow();

            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please select a row");
                return;
            }

            DeliveryWorkRequest request = (DeliveryWorkRequest) workRequestJTable.getValueAt(selectedRow, 5);
            String email = workRequestJTable.getValueAt(selectedRow, 0).toString();
            
            if (request.getStatus().equalsIgnoreCase("Delivery Accepted")) {

                JOptionPane.showMessageDialog(null, "Request already acknowledged");
            } else {
                request.setReceiver(userAccount);
                request.setStatus("Delivery Accepted");
                request.setResolveDate(new Date());
                 vacName = request.getVaccineName();
                populateTable();
            }
       
        String to = email;
       String from = "Globalvaccinationnoreply";
       String host = "smtp.gmail.com";
       Properties props = new Properties();
       props.put("mail.smtp.auth", "true");
       props.put("mail.smtp.starttls.enable", "true");
       props.put("mail.smtp.host", host);
       props.put("mail.smtp.port", "587");
       props.put("mail.smtp.ssl.trust", "smtp.gmail.com");
       Session session = Session.getInstance(props,
               new javax.mail.Authenticator() {
           protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
               return new javax.mail.PasswordAuthentication("Globalvaccinationnoreply", "Globalvaccinationnoreply@123");
           }
       }
       );
       try {
           MimeMessage message = new MimeMessage(session);
           message.setFrom(new InternetAddress(from));
           message.setRecipient(Message.RecipientType.TO, new InternetAddress(to));
           message.setSubject("--STATUS-- for Order " + result);
           message.setText("HELLO " + "\n\nVaccination Order Delivery Initiated"+"\nVaccine Name: "  +vacName+ "\n\nThe requestnwill be estimated delivered by" + jDateChooser.getDate() + "\n\n\n\n**This is an automated message please do not reply**");

           javax.mail.Transport.send(message);
           JOptionPane.showMessageDialog(null, "The message has been sent " );

       } catch (Exception e) {
           JOptionPane.showMessageDialog(null, e);
       }
        
        }
    }//GEN-LAST:event_acknowledgeBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acknowledgeBtn;
    private javax.swing.JLabel datePickerLabel;
    private javax.swing.JLabel deliveryLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
