/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.StaffRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.MedRecOrganization;
import Business.Organization.StaffOrganization;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Patient.PatientDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.StaffWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class PatientEntryJPanell extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private StaffOrganization staffOrganization;
    private PatientDirectory patientDirectory;
    private Enterprise ent;
   private MedRecOrganization med; 
   private Organization org;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public PatientEntryJPanell(JPanel userProcessContainer, UserAccount account, Organization organization1, EcoSystem business, Enterprise ent) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        //this.org = organization;
        this.ent=ent;
        
             for (Organization organization : ent.getOrganizationDirectory().getOrganizationList())
                {
                      for(Organization.Type type : Organization.Type.values()){
          
           if(type.getValue().equals(Organization.Type.MedicalRecord.getValue())){
               //med=(MedRecOrganization)organization;
               this.org=organization;
           
                    }
        }}
        
        populateTable();
        
        //staffNameJlabel.setText(userAccount.toString());
        //populateTable();

    }
    
        public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        
        for (Patient pat : org.getPatientDirectory().getPatientList()
                ){
            Object[] row = new Object[4];
            row[0] = pat.getPatientName();
            row[1] = pat.getDOB();
            row[2] = pat.getVaccineName();
            row[3] = pat.getDate();
            model.addRow(row);
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        VacNameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        PatientDOBTextField = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        VacDateTextField = new com.toedter.calendar.JDateChooser();
        submit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        PatientNameTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient DOB", "Vaccination Provided", "Vaccination Provided on Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 670, 110));

        enterpriseLabel.setFont(new java.awt.Font("Broadway", 1, 24)); // NOI18N
        enterpriseLabel.setText("ADD PATIENT DETAILS");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 12, 510, 60));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Patient DOB *: ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 160, 20));

        VacNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VacNameTextFieldActionPerformed(evt);
            }
        });
        add(VacNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 390, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Vaccine Name *: ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 160, 20));

        PatientDOBTextField.setMaxSelectableDate(new Date());
        add(PatientDOBTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 170, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Vaccination On Date*:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 160, 20));

        VacDateTextField.setMaxSelectableDate(new Date());
        add(VacDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 170, 30));

        submit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 420, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Patient Name *: ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 160, 20));

        PatientNameTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientNameTextField2ActionPerformed(evt);
            }
        });
        add(PatientNameTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, 390, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("<< BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void VacNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VacNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VacNameTextFieldActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        // med = new MedRecOrganization
       // for(Organization org : ent.getOrganizationDirectory().getOrganizationList()){
          
             
           
            
                
                for (Organization organization : ent.getOrganizationDirectory().getOrganizationList())
                {
                      for(Organization.Type type : Organization.Type.values()){
          
           if(type.getValue().equals(Organization.Type.MedicalRecord.getValue())){
               //med=(MedRecOrganization)organization;
               org=organization;
           
                    }
        }}
    
        
        //med = ent.getOrganizationDirectory().getOrganizationList().
        String name = PatientNameTextField2.getText();
        String vacName = VacNameTextField.getText();
        Date dob = PatientDOBTextField.getDate();
        Date vacDate = VacDateTextField.getDate();
              
        if(name.equals("") || vacName.equals("") || dob==null || vacDate==null){
            
            JOptionPane.showMessageDialog(null, "Please enter all required details");
        }
        else{
        org.getPatientDirectory().createPatient(name, dob, vacName, vacDate);
        populateTable();
        
        PatientNameTextField2.setText("");
        VacNameTextField.setText("");
        PatientDOBTextField.setDate(null);
        VacDateTextField.setDate(null);
        }   
    }//GEN-LAST:event_submitActionPerformed

    private void PatientNameTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientNameTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientNameTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
       CardLayout layout = (CardLayout) userProcessContainer.getLayout();
       layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser PatientDOBTextField;
    private javax.swing.JTextField PatientNameTextField2;
    private com.toedter.calendar.JDateChooser VacDateTextField;
    private javax.swing.JTextField VacNameTextField;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submit;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
